import java.io.IOException;
import java.util.Collection;

import org.apache.lucene.analysis.CharArraySet;
import org.apache.lucene.analysis.StopFilter;
import org.apache.lucene.analysis.TokenStream;
import org.apache.lucene.analysis.en.PorterStemFilter;
import org.apache.lucene.analysis.standard.StandardTokenizer;
import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
 
public class tokenizeStopStem{
 
	public tokenizeStopStem() {
		
	}
	
	public static void main() {
		String s = "As knowledge about the treatment of breast cancer has grown, attention has increasingly focused on developing a targeted approach to this diverse disease. In particular, treatment of human epidermal growth factor receptor (HER)2/neu-positive breast cancer has undergone significant advances since the cloning of the HER2 oncogene in 1984";
		tokenizeStopStem k = new tokenizeStopStem();
		System.out.println(k.output(s));
	}
	
	public String output(String input) {
        TokenStream tokenStream = new StandardTokenizer();
        
        Collection<String> c= null;
        c.add("a");
        c.add("able");
        c.add("about");
        c.add("above");
        c.add("according");
        c.add("accordingly");
        c.add("across");
        c.add("actually");
        c.add("after");
        c.add("afterwards");
        c.add("again");
        c.add("against");
        c.add("all");
        c.add("allow");
        c.add("allows");
        c.add("almost");
        c.add("alone");
        c.add("along");
        c.add("already");
        c.add("also");
        c.add("although");
        c.add("always");
        c.add("am");
        c.add("among");
        c.add("amongst");
        c.add("an");
        c.add("and");
        c.add("another");
        c.add("any");
        c.add("anybody");
        c.add("anyhow");
        c.add("anyone");
        c.add("anything");
        c.add("anyway");
        c.add("anyways");
        c.add("anywhere");
        c.add("apart");
        c.add("appear");
        c.add("appreciate");
        c.add("appropriate");
        c.add("are");
        c.add("around");
        c.add("as");
        c.add("aside");
        c.add("ask");
        c.add("asking");
        c.add("associated");
        c.add("at");
        c.add("available");
        c.add("away");
        c.add("awfully");
        c.add("b");
        c.add("be");
        c.add("became");
        c.add("because");
        c.add("become");
        c.add("becomes");
        c.add("becoming");
        c.add("been");
        c.add("before");
        c.add("beforehand");
        c.add("behind");
        c.add("being");
        c.add("believe");
        c.add("below");
        c.add("beside");
        c.add("besides");
        c.add("best");
        c.add("better");
        c.add("between");
        c.add("beyond");
        c.add("both");
        c.add("brief");
        c.add("but");
        c.add("by");
        c.add("c");
        c.add("came");
        c.add("can");
        c.add("cannot");
        c.add("cant");
        c.add("cause");
        c.add("causes");
        c.add("certain");
        c.add("certainly");
        c.add("changes");
        c.add("clearly");
        c.add("co");
        c.add("com");
        c.add("come");
        c.add("comes");
        c.add("concerning");
        c.add("consequently");
        c.add("consider");
        c.add("considering");
        c.add("contain");
        c.add("containing");
        c.add("contains");
        c.add("corresponding");
        c.add("could");
        c.add("course");
        c.add("currently");
        c.add("d");
        c.add("definitely");
        c.add("described");
        c.add("despite");
        c.add("did");
        c.add("different");
        c.add("do");
        c.add("does");
        c.add("doing");
        c.add("done");
        c.add("down");
        c.add("downwards");
        c.add("during");
        c.add("e");
        c.add("each");
        c.add("edu");
        c.add("eg");
        c.add("eight");
        c.add("either");
        c.add("else");
        c.add("elsewhere");
        c.add("enough");
        c.add("entirely");
        c.add("especially");
        c.add("et");
        c.add("etc");
        c.add("even");
        c.add("ever");
        c.add("every");
        c.add("everybody");
        c.add("everyone");
        c.add("everything");
        c.add("everywhere");
        c.add("ex");
        c.add("exactly");
        c.add("example");
        c.add("except");
        c.add("f");
        c.add("far");
        c.add("few");
        c.add("fifth");
        c.add("first");
        c.add("five");
        c.add("followed");
        c.add("following");
        c.add("follows");
        c.add("for");
        c.add("former");
        c.add("formerly");
        c.add("forth");
        c.add("four");
        c.add("from");
        c.add("further");
        c.add("furthermore");
        c.add("g");
        c.add("get");
        c.add("gets");
        c.add("getting");
        c.add("given");
        c.add("gives");
        c.add("go");
        c.add("goes");
        c.add("going");
        c.add("gone");
        c.add("got");
        c.add("gotten");
        c.add("greetings");
        c.add("h");
        c.add("had");
        c.add("happens");
        c.add("hardly");
        c.add("has");
        c.add("have");
        c.add("having");
        c.add("he");
        c.add("hello");
        c.add("help");
        c.add("hence");
        c.add("her");
        c.add("here");
        c.add("hereafter");
        c.add("hereby");
        c.add("herein");
        c.add("hereupon");
        c.add("hers");
        c.add("herself");
        c.add("hi");
        c.add("him");
        c.add("himself");
        c.add("his");
        c.add("hither");
        c.add("hopefully");
        c.add("how");
        c.add("howbeit");
        c.add("however");
        c.add("i");
        c.add("ie");
        c.add("if");
        c.add("ignored");
        c.add("immediate");
        c.add("in");
        c.add("inasmuch");
        c.add("inc");
        c.add("indeed");
        c.add("indicate");
        c.add("indicated");
        c.add("indicates");
        c.add("inner");
        c.add("insofar");
        c.add("instead");
        c.add("into");
        c.add("inward");
        c.add("is");
        c.add("it");
        c.add("its");
        c.add("itself");
        c.add("j");
        c.add("just");
        c.add("k");
        c.add("keep");
        c.add("keeps");
        c.add("kept");
        c.add("know");
        c.add("knows");
        c.add("known");
        c.add("l");
        c.add("last");
        c.add("lately");
        c.add("later");
        c.add("latter");
        c.add("latterly");
        c.add("least");
        c.add("less");
        c.add("lest");
        c.add("let");
        c.add("like");
        c.add("liked");
        c.add("likely");
        c.add("little");
        c.add("ll"); // added to avoid words like you'll,I'll etc.
        c.add("look");
        c.add("looking");
        c.add("looks");
        c.add("ltd");
        c.add("m");
        c.add("mainly");
        c.add("many");
        c.add("may");
        c.add("maybe");
        c.add("me");
        c.add("mean");
        c.add("meanwhile");
        c.add("merely");
        c.add("might");
        c.add("more");
        c.add("moreover");
        c.add("most");
        c.add("mostly");
        c.add("much");
        c.add("must");
        c.add("my");
        c.add("myself");
        c.add("n");
        c.add("name");
        c.add("namely");
        c.add("nd");
        c.add("near");
        c.add("nearly");
        c.add("necessary");
        c.add("need");
        c.add("needs");
        c.add("neither");
        c.add("never");
        c.add("nevertheless");
        c.add("new");
        c.add("next");
        c.add("nine");
        c.add("no");
        c.add("nobody");
        c.add("non");
        c.add("none");
        c.add("noone");
        c.add("nor");
        c.add("normally");
        c.add("not");
        c.add("nothing");
        c.add("novel");
        c.add("now");
        c.add("nowhere");
        c.add("o");
        c.add("obviously");
        c.add("of");
        c.add("off");
        c.add("often");
        c.add("oh");
        c.add("ok");
        c.add("okay");
        c.add("old");
        c.add("on");
        c.add("once");
        c.add("one");
        c.add("ones");
        c.add("only");
        c.add("onto");
        c.add("or");
        c.add("other");
        c.add("others");
        c.add("otherwise");
        c.add("ought");
        c.add("our");
        c.add("ours");
        c.add("ourselves");
        c.add("out");
        c.add("outside");
        c.add("over");
        c.add("overall");
        c.add("own");
        c.add("p");
        c.add("particular");
        c.add("particularly");
        c.add("per");
        c.add("perhaps");
        c.add("placed");
        c.add("please");
        c.add("plus");
        c.add("possible");
        c.add("presumably");
        c.add("probably");
        c.add("provides");
        c.add("q");
        c.add("que");
        c.add("quite");
        c.add("qv");
        c.add("r");
        c.add("rather");
        c.add("rd");
        c.add("re");
        c.add("really");
        c.add("reasonably");
        c.add("regarding");
        c.add("regardless");
        c.add("regards");
        c.add("relatively");
        c.add("respectively");
        c.add("right");
        c.add("s");
        c.add("said");
        c.add("same");
        c.add("saw");
        c.add("say");
        c.add("saying");
        c.add("says");
        c.add("second");
        c.add("secondly");
        c.add("see");
        c.add("seeing");
        c.add("seem");
        c.add("seemed");
        c.add("seeming");
        c.add("seems");
        c.add("seen");
        c.add("self");
        c.add("selves");
        c.add("sensible");
        c.add("sent");
        c.add("serious");
        c.add("seriously");
        c.add("seven");
        c.add("several");
        c.add("shall");
        c.add("she");
        c.add("should");
        c.add("since");
        c.add("six");
        c.add("so");
        c.add("some");
        c.add("somebody");
        c.add("somehow");
        c.add("someone");
        c.add("something");
        c.add("sometime");
        c.add("sometimes");
        c.add("somewhat");
        c.add("somewhere");
        c.add("soon");
        c.add("sorry");
        c.add("specified");
        c.add("specify");
        c.add("specifying");
        c.add("still");
        c.add("sub");
        c.add("such");
        c.add("sup");
        c.add("sure");
        c.add("t");
        c.add("take");
        c.add("taken");
        c.add("tell");
        c.add("tends");
        c.add("th");
        c.add("than");
        c.add("thank");
        c.add("thanks");
        c.add("thanx");
        c.add("that");
        c.add("thats");
        c.add("the");
        c.add("their");
        c.add("theirs");
        c.add("them");
        c.add("themselves");
        c.add("then");
        c.add("thence");
        c.add("there");
        c.add("thereafter");
        c.add("thereby");
        c.add("therefore");
        c.add("therein");
        c.add("theres");
        c.add("thereupon");
        c.add("these");
        c.add("they");
        c.add("think");
        c.add("third");
        c.add("this");
        c.add("thorough");
        c.add("thoroughly");
        c.add("those");
        c.add("though");
        c.add("three");
        c.add("through");
        c.add("throughout");
        c.add("thru");
        c.add("thus");
        c.add("to");
        c.add("together");
        c.add("too");
        c.add("took");
        c.add("toward");
        c.add("towards");
        c.add("tried");
        c.add("tries");
        c.add("truly");
        c.add("try");
        c.add("trying");
        c.add("twice");
        c.add("two");
        c.add("u");
        c.add("un");
        c.add("under");
        c.add("unfortunately");
        c.add("unless");
        c.add("unlikely");
        c.add("until");
        c.add("unto");
        c.add("up");
        c.add("upon");
        c.add("us");
        c.add("use");
        c.add("used");
        c.add("useful");
        c.add("uses");
        c.add("using");
        c.add("usually");
        c.add("uucp");
        c.add("v");
        c.add("value");
        c.add("various");
        c.add("ve"); // added to avoid words like I've,you've etc.
        c.add("very");
        c.add("via");
        c.add("viz");
        c.add("vs");
        c.add("w");
        c.add("want");
        c.add("wants");
        c.add("was");
        c.add("way");
        c.add("we");
        c.add("welcome");
        c.add("well");
        c.add("went");
        c.add("were");
        c.add("what");
        c.add("whatever");
        c.add("when");
        c.add("whence");
        c.add("whenever");
        c.add("where");
        c.add("whereafter");
        c.add("whereas");
        c.add("whereby");
        c.add("wherein");
        c.add("whereupon");
        c.add("wherever");
        c.add("whether");
        c.add("which");
        c.add("while");
        c.add("whither");
        c.add("who");
        c.add("whoever");
        c.add("whole");
        c.add("whom");
        c.add("whose");
        c.add("why");
        c.add("will");
        c.add("willing");
        c.add("wish");
        c.add("with");
        c.add("within");
        c.add("without");
        c.add("wonder");
        c.add("would");
        c.add("would");
        c.add("x");
        c.add("y");
        c.add("yes");
        c.add("yet");
        c.add("you");
        c.add("your");
        c.add("yours");
        c.add("yourself");
        c.add("yourselves");
        c.add("z");
        c.add("zero");
        
		CharArraySet stop = new CharArraySet(c, false);
        tokenStream = new StopFilter(tokenStream,stop );
        tokenStream = new PorterStemFilter(tokenStream);
 
        StringBuilder sb = new StringBuilder();
        OffsetAttribute offsetAttribute = tokenStream.addAttribute(OffsetAttribute.class);
        CharTermAttribute charTermAttr = tokenStream.getAttribute(CharTermAttribute.class);
        try{
            while (tokenStream.incrementToken()) {
                if (sb.length() > 0) {
                    sb.append(" ");
                }
                sb.append(charTermAttr.toString());
            }
        }
        catch (IOException e){
            System.out.println(e.getMessage());
        }
        return sb.toString();
        }
}